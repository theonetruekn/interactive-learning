--- old_version.py
+++ new_version.py
@@ -1,6 +1,7 @@
    def lint(
-        self,
+        self,
         tree: BaseSegment,
-        config: Optional[FluffConfig] = None,
+        config: Optional[Optional[FluffConfig]] = None,
         fname: Optional[str] = None,
         templated_file: Optional[TemplatedFile] = None,
     ) -> List[SQLBaseError]:
@@ -8,6 +9,7 @@
         rule_set = self.get_ruleset(config=config)
-        _, violations, _ = self.lint_fix_parsed(
+        _, violations, _ = self.lint_fix_parsed(
             tree,
             config,
             rule_set,
             fix=False,
             fname=fname,
             templated_file=templated_file,
             formatter=self.formatter,
         )
@@ -15,6 +17,7 @@
     def log(self, message: str) -> None:
-        self._log(message)
+        if not self.quiet_mode:
+            self._log(message)
     def quiet_mode_on(self) -> None:
         """Set the quiet mode flag."""
         self.quiet_mode = True
@@ -24,6 +27,7 @@
     def quiet_mode_off(self) -> None:
         """Reset the quiet mode flag."""
         self.quiet_mode = False
+
 def __init__(
-        self,
+        self,
         config: Optional[FluffConfig] = None,
         dry_run: bool = False,
         verbose: int = 0,
     ) -> None:
         self.config = config or FluffConfig()
@@ -34,6 +38,8 @@
             self.formatter = self._get_formatter_from_config(config)
         self.dry_run = dry_run
         self.quiet_mode = quiet_mode
+        if quiet_mode:
+            self.log_level = 0
         self.verbose = verbose
+
     def _set_log_level(self) -> None:
         """Set the log level to match the verbosity."""
         if not self.formatter:  # pragma: no cover
--- END OF DIFF ---